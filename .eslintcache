[{"C:\\Vinod\\Work\\reactcoding\\src\\index.js":"1","C:\\Vinod\\Work\\reactcoding\\src\\App.js":"2","C:\\Vinod\\Work\\reactcoding\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":5955,"mtime":1612513507227,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"hias9h",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Vinod\\Work\\reactcoding\\src\\index.js",[],["17","18"],"C:\\Vinod\\Work\\reactcoding\\src\\App.js",["19"],"\nimport React, { useState, useEffect } from 'react'\nimport './App.css';\n\nfunction App() {\n\n  const [currentBook, setCurrentBook] = useState(\"\")\n  const [currentUnits, setCurrentUnits] = useState(\"\")\n  const [currentPrice, setCurrentPrice] = useState(\"\")\n  const [checked, setChecked] = useState(false)\n  const [currentDiscountAmt, setDiscountAmt] = useState(\"\")\n  const [currentRecord, setCurrentRecord] = useState([]);\n  const [select, setSelect] = useState(\"Fiction\");\n  \n  const initialValue = [\n    { id: 0, value: \" --- Select a Book ---\" }];\n\n  const [stateOptions, setStateValues] = useState(initialValue);\n\n  const fictionBooks = [\n    { id: 1, value: \"Friday Barns\" },\n    { id: 2, value: \"Harry Porter\" },\n    { id: 3, value: \"Hunger Games\" },\n    { id: 4, value: \"Truely Tan\" }\n  ];\n\n  const dramaBooks = [\n    { id: 1, value: \"Invisible Man\" },\n    { id: 2, value: \"Tomorrow\" },\n    { id: 3, value: \"Border\" },\n    { id: 4, value: \"The Rainbow\" }\n  ];\n\n  useEffect(() => {\n    setStateValues(fictionBooks);\n  }, []);\n\n  const changeBook = (newBook) => {\n    setCurrentBook(newBook);\n  }\n\n  const changeUnits = (newunits) => {\n    setCurrentUnits(newunits);\n  }\n\n  const changePrice = (newprice) => {\n    setCurrentPrice(newprice);\n  }\n\n  const discountAmt = (discount) => {\n    setDiscountAmt(discount);\n  }\n\n  const resetAll = () => {\n    setCurrentRecord([]);\n    setCurrentBook(\"\");\n    setCurrentUnits(\"\");\n    setCurrentPrice(\"\");\n  };\n\n  const handleChange = event => {\n    const value = event.target.value;\n    setSelect(value);\n    if(value === \"Fiction\"){\n      setStateValues(fictionBooks);\n    } else {\n      setStateValues(dramaBooks);\n    }\n  };\n\n  const calculateTotal = () => {\n    var cal_total = currentUnits * currentPrice;\n    var discountPercentage = currentDiscountAmt / 100;\n    var discountedAmout = cal_total * discountPercentage;\n    var finalAmountAfterDisount = cal_total - discountedAmout;\n    const recentNewRecord = {\n      book: currentBook,\n      units: currentUnits,\n      price: cal_total,\n      discount: discountedAmout.toFixed(2),\n      finalamount: finalAmountAfterDisount.toFixed(2)\n    };\n\n    const newRecord = [...currentRecord, recentNewRecord];\n    setCurrentRecord(newRecord);\n    setCurrentBook(\"\");\n    setCurrentUnits(\"\");\n    setCurrentPrice(\"\");\n    setDiscountAmt(\"\");\n  };\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>Book shopping</h1>\n      </div>\n      <div className=\"flexbox-container\">\n        <div className=\"column_1\">\n          <h2>Purchase Section</h2>\n          <div className=\"maintransaction\">\n            <div className=\"bookstype\">\n              <span className=\"category\">\n                <label>Fiction</label>\n                <input\n                  name=\"category\"\n                  value=\"Fiction\"\n                  type=\"radio\"\n                  onChange={handleChange}\n                  checked={select === \"Fiction\"}\n                />\n                <label>Drama</label>\n                <input\n                  name=\"category\"\n                  value=\"Drama\"\n                  type=\"radio\"\n                  onChange={handleChange}\n                  checked={select === \"Drama\"}\n                />\n              </span>\n            </div>\n            <div className=\"container\">\n              <label>Select Book</label>\n              <select className=\"bookoptions\" defaultValue={'DEFAULT'} onChange={(event) => changeBook(event.target.value)}>\n                <option value=\"DEFAULT\" disabled>Choose a book ...</option>\n                {\n                  stateOptions.map((localState, index) =>(\n                  <option key={localState.id}>{localState.value}</option>\n                ))\n                }\n              </select>\n            </div><br></br>\n            <div className=\"quantity\">\n              <span className=\"units\">\n                <label>Units</label>\n                <input name=\"units\" type=\"text\" onChange={(event) => changeUnits(event.target.value)}></input>\n              </span>\n              <span className=\"price\">\n                <label>Price $</label>\n                <input name=\"price\" type=\"text\" onChange={(event) => changePrice(event.target.value)}></input>\n              </span>\n              <span className=\"discount\">\n                <label>Discount %</label>\n                <input name=\"discount\" type=\"checkbox\" onChange={(event) => setChecked(!checked)} checked={checked} />\n                {\n                  checked ? (\n                    <input className=\"discountvalue\" name=\"discountvalue\" type=\"text\" onChange={(event) => discountAmt(event.target.value)} placeholder=\"discount\" />\n                  ) : (<div></div>)\n                }\n              </span>\n            </div>\n            <div className=\"recordBtn\">\n              <button name=\"record\" onClick={(event) => calculateTotal()}>Record</button>\n              <button name=\"reset\" onClick={resetAll}>Reset</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"column_2\">\n          <div className=\"purchasedbooks\">\n            <h2>Transaction Record</h2>\n            <table className=\"purchasetable result\">\n              <tr>\n                <th>Item no</th>\n                <th>Books</th>\n                <th>Units</th>\n                <th>Amount (AUD)</th>\n                <th>Discount Amount (AUD)</th>\n                <th>Final Amount (AUD)</th>\n              </tr>\n              {\n                currentRecord.map(({ book, units, price, discount, finalamount }, index) => (\n                  <tr>\n                    <td>{index + 1}</td>\n                    <td>{book}</td>\n                    <td>{units}</td>\n                    <td>{price}</td>\n                    <td>{discount}</td>\n                    <td>{finalamount}</td>\n                  </tr>\n                ))\n              }\n\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Vinod\\Work\\reactcoding\\src\\reportWebVitals.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":36,"column":6,"nodeType":"28","endLine":36,"endColumn":8,"suggestions":"29"},{"ruleId":"22","replacedBy":"30"},{"ruleId":"24","replacedBy":"31"},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fictionBooks'. Either include it or remove the dependency array.","ArrayExpression",["34"],["32"],["33"],"no-global-assign","no-unsafe-negation",{"desc":"35","fix":"36"},"Update the dependencies array to be: [fictionBooks]",{"range":"37","text":"38"},[1024,1026],"[fictionBooks]"]