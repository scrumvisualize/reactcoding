[{"C:\\Vinod\\Work\\reactcoding\\src\\index.js":"1","C:\\Vinod\\Work\\reactcoding\\src\\reportWebVitals.js":"2","C:\\Vinod\\Work\\reactcoding\\src\\App.js":"3","C:\\vinod\\work\\reactcoding\\src\\index.js":"4","C:\\vinod\\work\\reactcoding\\src\\App.js":"5","C:\\vinod\\work\\reactcoding\\src\\reportWebVitals.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":11979,"mtime":1619605432309,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":11979,"mtime":1620480993440,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"hias9h",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"auvh6m",{"filePath":"26","messages":"27","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Vinod\\Work\\reactcoding\\src\\index.js",[],["30","31"],"C:\\Vinod\\Work\\reactcoding\\src\\reportWebVitals.js",[],"C:\\Vinod\\Work\\reactcoding\\src\\App.js",["32","33","34","35","36","37","38","39","40","41","42","43"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nimport { useForm } from \"react-hook-form\";\r\nimport './App.css';\r\nconst axios = require('axios');\r\n\r\n\r\nfunction App() {\r\n\r\n  const [currentBook, setCurrentBook] = useState(\"\")\r\n  const [currentUnits, setCurrentUnits] = useState(\"\")\r\n  const [currentPrice, setCurrentPrice] = useState(\"\")\r\n  const [checked, setChecked] = useState(false)\r\n  const [currentDiscountAmt, setDiscountAmt] = useState(\"\")\r\n  const [currentRecord, setCurrentRecord] = useState([]);\r\n  const [select, setSelect] = useState(\"Fiction\");\r\n  const [target_currency, setTargetCurrency] = useState(\"AUD\");\r\n  const [from_currency, setFromCurrency] = useState(\"USD\");\r\n  const [rate, setRate] = useState(null);\r\n  const [apiStatus, setApiStatus] = useState([]);\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n\r\n  const from_select = useRef(),\r\n    to_select = useRef(),\r\n    from_input = useRef(),\r\n    to_input = useRef();\r\n\r\n  const initialValue = [\r\n    { id: 0, value: \" --- Select a Book ---\" }];\r\n\r\n  const [stateOptions, setStateValues] = useState(initialValue);\r\n\r\n  const fictionBooks = [\r\n    { id: 1, value: \"Friday Barnes\" },\r\n    { id: 2, value: \"Harry Potter\" },\r\n    { id: 3, value: \"Hunger Games\" },\r\n    { id: 4, value: \"Truly Tan\" }\r\n  ];\r\n\r\n  const dramaBooks = [\r\n    { id: 1, value: \"Invisible Man\" },\r\n    { id: 2, value: \"Tomorrow\" },\r\n    { id: 3, value: \"Border\" },\r\n    { id: 4, value: \"The Rainbow\" }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setStateValues(fictionBooks);\r\n  }, []);\r\n\r\n  const changeBook = (newBook) => {\r\n    setCurrentBook(newBook);\r\n  }\r\n\r\n  const changeUnits = (newunits) => {\r\n    setCurrentUnits(newunits);\r\n  }\r\n\r\n  const changePrice = (newprice) => {\r\n    setCurrentPrice(newprice);\r\n  }\r\n\r\n  const discountAmt = (discount) => {\r\n    setDiscountAmt(discount);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await axios.get('https://api.exchangeratesapi.io/latest');\r\n        console.log(data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n\r\n  const resetAll = () => {\r\n    setCurrentRecord([]);\r\n    setCurrentBook(\"\");\r\n    setCurrentUnits(\"\");\r\n    setCurrentPrice(\"\");\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const value = event.target.value;\r\n    setSelect(value);\r\n    if (value === \"Fiction\") {\r\n      setStateValues(fictionBooks);\r\n    } else {\r\n      setStateValues(dramaBooks);\r\n    }\r\n  };\r\n\r\n  const calculateTotal = data => {\r\n    alert(JSON.stringify(data));\r\n    var cal_total = currentUnits * currentPrice;\r\n    var discountPercentage = currentDiscountAmt / 100;\r\n    var discountedAmout = cal_total * discountPercentage;\r\n    var finalAmountAfterDisount = cal_total - discountedAmout;\r\n    \r\n    const recentNewRecord = {\r\n      book: currentBook,\r\n      units: currentUnits,\r\n      price: currentPrice,\r\n      amount: cal_total,\r\n      discount: discountedAmout.toFixed(2),\r\n      finalamount: finalAmountAfterDisount.toFixed(2)\r\n    };\r\n\r\n    const newRecord = [...currentRecord, recentNewRecord];\r\n    setCurrentRecord(newRecord);\r\n    setCurrentBook(\"\");\r\n    setCurrentUnits(\"\");\r\n    setCurrentPrice(\"\");\r\n    setDiscountAmt(\"\");\r\n  };\r\n\r\n\r\n  const selectTargetCurrency = () => {\r\n    const from_cur = from_select.current.value;\r\n    const to_cur = to_select.current.value;\r\n    axios\r\n      .get(\"https://api.exchangeratesapi.io/latest?base=\" + from_cur)\r\n      .then((result) => {\r\n        const rate = result.data.rates[to_cur];\r\n        setTargetCurrency(rate);\r\n      });\r\n  }\r\n\r\n  const convertRate = () => {\r\n    const from_cur = from_select.current.value;\r\n    const to_cur = to_select.current.value;\r\n    const from_amount = from_input.current.value;\r\n    console.log(from_cur);\r\n    axios\r\n      .get(\"https://api.exchangeratesapi.io/latest?base=\" + from_cur)\r\n      .then((result) => {\r\n        const rate = result.data.rates[to_cur];\r\n        const converted_amount = rate * from_amount;\r\n        to_input.current.value = converted_amount.toFixed(2);\r\n      });\r\n  };\r\n\r\n  const setCurRate = () => {\r\n    const from_cur = from_select.current.value;\r\n    const to_cur = to_select.current.value;\r\n    axios\r\n      .get(\"https://api.exchangeratesapi.io/latest?base=\" + from_cur)\r\n      .then((result) => {\r\n        const rate = result.data.rates[to_cur];\r\n        setRate(rate);\r\n      });\r\n  };\r\n\r\n  const removeRecord = (indexToRemove) => {\r\n    const newList = currentRecord.filter((item, index) => index !== indexToRemove);\r\n    setCurrentRecord(newList);\r\n  }\r\n\r\n  function handleClickBasic(indexToRemove) {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div id=\"deletedialog\" className='custom-ui'>\r\n            <h1>Are you sure?</h1>\r\n            <p>You want to delete this record ?</p>\r\n            <button onClick={onClose}>No</button>\r\n            <button\r\n              onClick={() => {\r\n                removeRecord(indexToRemove)\r\n                onClose();\r\n              }}\r\n            >\r\n              Yes, Delete it!\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  const onSubmit = data => {\r\n    alert(JSON.stringify(data));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"datacolumn1\">\r\n        <div>\r\n          <h1>Order Books</h1>\r\n        </div>\r\n        <form onSubmit={handleSubmit(calculateTotal)}>\r\n          <h3>Choose a Category:</h3>\r\n          <div className=\"bookstype\">\r\n            <div id=\"radioselect1\">\r\n              <label>Fiction</label>\r\n              <input\r\n                name=\"category\"\r\n                value=\"Fiction\"\r\n                type=\"radio\"\r\n                onChange={handleChange}\r\n                checked={select === \"Fiction\"}\r\n              />\r\n            </div>\r\n            <div id=\"radioselect2\">\r\n              <label>Drama</label>\r\n              <input\r\n                name=\"category\"\r\n                value=\"Drama\"\r\n                type=\"radio\"\r\n                onChange={handleChange}\r\n                checked={select === \"Drama\"}\r\n              />\r\n            </div>\r\n          </div><br></br><br></br>\r\n          <div className=\"selectabook\">\r\n            <label>Select Book</label>\r\n            <select className=\"bookoptions\" defaultValue={'DEFAULT'} onChange={(event) => changeBook(event.target.value)}>\r\n              <option value=\"DEFAULT\" disabled>Choose a book ...</option>\r\n              {\r\n                stateOptions.map((localState, index) => (\r\n                  <option value={localState.value} key={localState.id}>{localState.value}</option>\r\n                ))\r\n              }\r\n            </select>\r\n          </div>\r\n          <br></br>\r\n          <div>\r\n            <label htmlFor=\"units\">Units</label>\r\n            <input\r\n              name=\"units\"\r\n              onChange={(event) => changeUnits(event.target.value)}\r\n              placeholder=\"0\"\r\n              ref={register({\r\n                required:\"Required\",\r\n                validate: value => value > 0\r\n              })}\r\n            />\r\n          </div>\r\n          {errors.units && <p>Input is not valid</p>}\r\n          <div>\r\n            <label htmlFor=\"price\">Price</label>\r\n            <input\r\n              name=\"price\"\r\n              placeholder=\"0\"\r\n              onChange={(event) => changePrice(event.target.value)}\r\n              ref={register({\r\n                required: \"Price is required\",\r\n                pattern: {\r\n                  value: /^[0-9\\b]+$/,\r\n                  message: \"Invalid price\"\r\n                }\r\n              })}\r\n            />\r\n          </div>\r\n          {errors.price && <p>{errors.price.message}</p>}\r\n          <div>\r\n            <span className=\"discount\">\r\n              <label>Discount %</label>\r\n              <input name=\"discount\" type=\"checkbox\" onChange={(event) => setChecked(!checked)} checked={checked} />\r\n              {\r\n                checked ? (\r\n                  <input className=\"discountvalue\"\r\n                    name=\"discountvalue\"\r\n                    type=\"text\"\r\n                    onChange={(event) => discountAmt(event.target.value)} placeholder=\"discount\"\r\n                    ref={register({\r\n                      required: \"Discount is required\",\r\n                      pattern: {\r\n                        value: /^[0-9\\b]+$/,\r\n                        message: \"Invalid discount amount !\"\r\n                      }\r\n                    })}\r\n                  />\r\n                ) : (<div></div>)\r\n              }\r\n            </span>\r\n            {errors.discountvalue && <p>{errors.discountvalue.message}</p>}\r\n          </div>\r\n          <input type=\"submit\"/>\r\n        </form>\r\n\r\n      </div>\r\n      <div className=\"datacolumn2\">\r\n        <div>\r\n          <h1>Order details</h1>\r\n        </div>\r\n        <div className=\"column_result\">\r\n          <div className=\"purchasedbooks\">\r\n            <h3>Transaction record</h3>\r\n            <table id=\"transactionsection\" className=\"purchasetable result\">\r\n              <th>Item no</th>\r\n              <th>Books</th>\r\n              <th>Units</th>\r\n              <th>Price</th>\r\n              <th>Amount (AUD)</th>\r\n              <th>Discount Amount (AUD)</th>\r\n              <th>Final Amount (AUD)</th>\r\n              <th></th>\r\n\r\n              {\r\n                currentRecord.map(({ book, units, price, amount, discount, finalamount }, index) => (\r\n                  <tr>\r\n                    <td>{index + 1}</td>\r\n                    <td>{book}</td>\r\n                    <td>{units}</td>\r\n                    <td>$ {price}</td>\r\n                    <td>$ {amount}</td>\r\n                    <td>$ {discount}</td>\r\n                    <td>$ {finalamount}</td>\r\n                    <td>\r\n                      <span onClick={() => handleClickBasic(index)} className=\"removeRecord\">\r\n                        -\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/*\r\n      <div className=\"globalCurrencyConverter\">\r\n        <h2>Currency Converter</h2>\r\n        <div className=\"container box\">\r\n          <label>\r\n            <input\r\n              ref={from_input}\r\n              name=\"sourceCurrency\"\r\n              type=\"text\"\r\n              placeholder=\"fromCurrency\"\r\n            />\r\n            <select\r\n              ref={from_select}\r\n              className=\"fromCurrency\"\r\n              defaultValue={\"USD\"}\r\n              onChange={setCurRate}\r\n            >\r\n              <option value=\"USD\">USD</option>\r\n              <option value=\"AUD\">AUD</option>\r\n              <option value=\"NZD\">NZD</option>\r\n            </select>\r\n          </label>\r\n          {\" --> \"}\r\n          <label>\r\n            <input\r\n              ref={to_input}\r\n              name=\"targetCurrency\"\r\n              type=\"text\"\r\n              placeholder=\"toCurrency\"\r\n            />\r\n            <select ref={to_select} className=\"toCurrency\" defaultValue=\"AUD\" onChange={setCurRate}>\r\n              <option value=\"USD\">USD</option>\r\n              <option value=\"AUD\">AUD</option>\r\n              <option value=\"NZD\">NZD</option>\r\n              <option value=\"EUR\">EUR</option>\r\n              <option value=\"INR\">INR</option>\r\n              <option value=\"AED\">AED</option>\r\n            </select>\r\n          </label>\r\n          <div className=\"recordBtn\">\r\n            {rate ? (\r\n              <div>\r\n                Rate: One {from_currency} is {rate}\r\n              </div>\r\n            ) : null}\r\n            <button name=\"convert\" onClick={convertRate}>\r\n              Convert\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div> \r\n      */}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["44","45"],"C:\\vinod\\work\\reactcoding\\src\\index.js",[],"C:\\vinod\\work\\reactcoding\\src\\App.js",["46","47","48","49","50","51","52","53","54","55","56","57"],"C:\\vinod\\work\\reactcoding\\src\\reportWebVitals.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":18,"column":10,"nodeType":"64","messageId":"65","endLine":18,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":19,"column":10,"nodeType":"64","messageId":"65","endLine":19,"endColumn":23},{"ruleId":"62","severity":1,"message":"67","line":19,"column":25,"nodeType":"64","messageId":"65","endLine":19,"endColumn":40},{"ruleId":"62","severity":1,"message":"68","line":20,"column":10,"nodeType":"64","messageId":"65","endLine":20,"endColumn":14},{"ruleId":"62","severity":1,"message":"69","line":21,"column":10,"nodeType":"64","messageId":"65","endLine":21,"endColumn":19},{"ruleId":"62","severity":1,"message":"70","line":21,"column":21,"nodeType":"64","messageId":"65","endLine":21,"endColumn":33},{"ruleId":"71","severity":1,"message":"72","line":51,"column":6,"nodeType":"73","endLine":51,"endColumn":8,"suggestions":"74"},{"ruleId":"62","severity":1,"message":"75","line":84,"column":9,"nodeType":"64","messageId":"65","endLine":84,"endColumn":17},{"ruleId":"62","severity":1,"message":"76","line":126,"column":9,"nodeType":"64","messageId":"65","endLine":126,"endColumn":29},{"ruleId":"62","severity":1,"message":"77","line":137,"column":9,"nodeType":"64","messageId":"65","endLine":137,"endColumn":20},{"ruleId":"62","severity":1,"message":"78","line":151,"column":9,"nodeType":"64","messageId":"65","endLine":151,"endColumn":19},{"ruleId":"62","severity":1,"message":"79","line":189,"column":9,"nodeType":"64","messageId":"65","endLine":189,"endColumn":17},{"ruleId":"58","replacedBy":"80"},{"ruleId":"60","replacedBy":"81"},{"ruleId":"62","severity":1,"message":"63","line":18,"column":10,"nodeType":"64","messageId":"65","endLine":18,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":19,"column":10,"nodeType":"64","messageId":"65","endLine":19,"endColumn":23},{"ruleId":"62","severity":1,"message":"67","line":19,"column":25,"nodeType":"64","messageId":"65","endLine":19,"endColumn":40},{"ruleId":"62","severity":1,"message":"68","line":20,"column":10,"nodeType":"64","messageId":"65","endLine":20,"endColumn":14},{"ruleId":"62","severity":1,"message":"69","line":21,"column":10,"nodeType":"64","messageId":"65","endLine":21,"endColumn":19},{"ruleId":"62","severity":1,"message":"70","line":21,"column":21,"nodeType":"64","messageId":"65","endLine":21,"endColumn":33},{"ruleId":"71","severity":1,"message":"72","line":51,"column":6,"nodeType":"73","endLine":51,"endColumn":8,"suggestions":"82"},{"ruleId":"62","severity":1,"message":"75","line":84,"column":9,"nodeType":"64","messageId":"65","endLine":84,"endColumn":17},{"ruleId":"62","severity":1,"message":"76","line":126,"column":9,"nodeType":"64","messageId":"65","endLine":126,"endColumn":29},{"ruleId":"62","severity":1,"message":"77","line":137,"column":9,"nodeType":"64","messageId":"65","endLine":137,"endColumn":20},{"ruleId":"62","severity":1,"message":"78","line":151,"column":9,"nodeType":"64","messageId":"65","endLine":151,"endColumn":19},{"ruleId":"62","severity":1,"message":"79","line":189,"column":9,"nodeType":"64","messageId":"65","endLine":189,"endColumn":17},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'target_currency' is assigned a value but never used.","Identifier","unusedVar","'from_currency' is assigned a value but never used.","'setFromCurrency' is assigned a value but never used.","'rate' is assigned a value but never used.","'apiStatus' is assigned a value but never used.","'setApiStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fictionBooks'. Either include it or remove the dependency array.","ArrayExpression",["85"],"'resetAll' is assigned a value but never used.","'selectTargetCurrency' is assigned a value but never used.","'convertRate' is assigned a value but never used.","'setCurRate' is assigned a value but never used.","'onSubmit' is assigned a value but never used.",["83"],["84"],["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"87","fix":"89"},"Update the dependencies array to be: [fictionBooks]",{"range":"90","text":"91"},{"range":"92","text":"91"},[1673,1675],"[fictionBooks]",[1673,1675]]